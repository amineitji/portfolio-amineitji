{"ast":null,"code":"import LineChart from \"@/components/Charts/LineChart\";\nimport BarChart from \"@/components/Charts/BarChart\";\nimport * as chartConfigs from \"@/components/Charts/config\";\nimport TaskList from \"./Dashboard/TaskList\";\nimport UserTable from \"./Dashboard/UserTable\";\nimport config from \"@/config\";\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    TaskList,\n    UserTable\n  },\n  data() {\n    return {\n      bigLineChart: {\n        allData: [[100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100], [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120], [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]],\n        activeIndex: 0,\n        chartData: {\n          datasets: [{}],\n          labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"]\n        },\n        extraOptions: chartConfigs.purpleChartOptions,\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n        categories: []\n      },\n      purpleLineChart: {\n        extraOptions: chartConfigs.purpleChartOptions,\n        chartData: {\n          labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n          datasets: [{\n            label: \"Data\",\n            fill: true,\n            borderColor: config.colors.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.primary,\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: config.colors.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: [80, 100, 70, 80, 120, 80]\n          }]\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.2, 0]\n      },\n      greenLineChart: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n          datasets: [{\n            label: \"My First dataset\",\n            fill: true,\n            borderColor: config.colors.danger,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.danger,\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: config.colors.danger,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: [90, 27, 60, 12, 80]\n          }]\n        },\n        gradientColors: [\"rgba(66,134,121,0.15)\", \"rgba(66,134,121,0.0)\", \"rgba(66,134,121,0)\"],\n        gradientStops: [1, 0.4, 0]\n      },\n      blueBarChart: {\n        extraOptions: chartConfigs.barChartOptions,\n        chartData: {\n          labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n          datasets: [{\n            label: \"Countries\",\n            fill: true,\n            borderColor: config.colors.info,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            data: [53, 20, 10, 80, 100, 45]\n          }]\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0]\n      }\n    };\n  },\n  computed: {\n    enableRTL() {\n      return this.$route.query.enableRTL;\n    },\n    isRTL() {\n      return this.$rtl.isRTL;\n    },\n    bigLineChartCategories() {\n      return this.$t(\"dashboard.chartCategories\");\n    }\n  },\n  methods: {\n    initBigChart(index) {\n      let chartData = {\n        datasets: [{\n          fill: true,\n          borderColor: config.colors.primary,\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: config.colors.primary,\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: config.colors.primary,\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: this.bigLineChart.allData[index]\n        }],\n        labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"]\n      };\n      this.$refs.bigChart.updateGradients(chartData);\n      this.bigLineChart.chartData = chartData;\n      this.bigLineChart.activeIndex = index;\n    }\n  },\n  mounted() {\n    this.i18n = this.$i18n;\n    if (this.enableRTL) {\n      this.i18n.locale = \"ar\";\n      this.$rtl.enableRTL();\n    }\n    this.initBigChart(0);\n  },\n  beforeDestroy() {\n    if (this.$rtl.isRTL) {\n      this.i18n.locale = \"en\";\n      this.$rtl.disableRTL();\n    }\n  }\n};","map":{"version":3,"names":["LineChart","BarChart","chartConfigs","TaskList","UserTable","config","components","data","bigLineChart","allData","activeIndex","chartData","datasets","labels","extraOptions","purpleChartOptions","gradientColors","colors","primaryGradient","gradientStops","categories","purpleLineChart","label","fill","borderColor","primary","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","greenLineChart","greenChartOptions","danger","blueBarChart","barChartOptions","info","computed","enableRTL","$route","query","isRTL","$rtl","bigLineChartCategories","$t","methods","initBigChart","index","$refs","bigChart","updateGradients","mounted","i18n","$i18n","locale","beforeDestroy","disableRTL"],"sources":["src/pages/Dashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h3 class=\"card-title\">Contribution à la librairie python de recherche CDlib</h3>\n            <a href=\"/img/projet_cdlib.pdf\">Cliquez ici pour consulter le rapport du projet</a>\n            <h5 class=\"card-category\">\n              Ce projet vise à enrichir la librairie Python CDlib, spécialisée dans l'analyse des\n              communautés dans les réseaux complexes. Les contributions incluent le développement de nouvelles\n              visualisations de communautés, l'extension de fonctionnalités existantes et l'amélioration de la\n              documentation. L'objectif est de consolider CDlib en tant qu'outil pour l'analyse et la visualisation de\n              réseaux dans l'écosystème Python.\n            </h5>\n\n          </template>\n          <div class=\"chart-area\">\n            <img src=\"/img/cdlib.png\" alt=\"CV\" class=\"cv-image\" @load=\"adjustCardWidth\" ref=\"cvImage\" />\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{ $t(\"dashboard.totalShipments\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"tim-icons icon-bell-55 text-primary\"></i> 763,215\n            </h3>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n          </template>\n          <div class=\"chart-area\">\n            <img src=\"/img/cv_portfolio_fr.png\" alt=\"CV\" class=\"cv-image\" @load=\"adjustCardWidth\" ref=\"cvImage\" />\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{ $t(\"dashboard.dailySales\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"tim-icons icon-delivery-fast text-info\"></i> 3,500€\n            </h3>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n          </template>\n          <div class=\"chart-area\">\n            <img src=\"/img/cv_portfolio_fr.png\" alt=\"CV\" class=\"cv-image\" @load=\"adjustCardWidth\" ref=\"cvImage\" />\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-4\" :class=\"{ 'text-right': isRTL }\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{ $t(\"dashboard.completedTasks\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"tim-icons icon-send text-success\"></i> 12,100K\n            </h3>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n          </template>\n          <div class=\"chart-area\">\n            <img src=\"/img/cv_portfolio_fr.png\" alt=\"CV\" class=\"cv-image\" @load=\"adjustCardWidth\" ref=\"cvImage\" />\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-6 col-md-12\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{ $t(\"dashboard.dailySales\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"tim-icons icon-delivery-fast text-info\"></i> 3,500€\n            </h3>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n          </template>\n          <div class=\"chart-area\">\n            <img src=\"/img/cv_portfolio_fr.png\" alt=\"CV\" class=\"cv-image\" @load=\"adjustCardWidth\" ref=\"cvImage\" />\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-6 col-md-12\">\n        <card type=\"chart\">\n          <template slot=\"header\">\n            <h5 class=\"card-category\">{{ $t(\"dashboard.dailySales\") }}</h5>\n            <h3 class=\"card-title\">\n              <i class=\"tim-icons icon-delivery-fast text-info\"></i> 3,500€\n            </h3>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n          </template>\n          <div class=\"chart-area\">\n            <img src=\"/img/cv_portfolio_fr.png\" alt=\"CV\" class=\"cv-image\" @load=\"adjustCardWidth\" ref=\"cvImage\" />\n          </div>\n        </card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport LineChart from \"@/components/Charts/LineChart\";\nimport BarChart from \"@/components/Charts/BarChart\";\nimport * as chartConfigs from \"@/components/Charts/config\";\nimport TaskList from \"./Dashboard/TaskList\";\nimport UserTable from \"./Dashboard/UserTable\";\nimport config from \"@/config\";\n\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    TaskList,\n    UserTable,\n  },\n  data() {\n    return {\n      bigLineChart: {\n        allData: [\n          [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n          [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n          [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\n        ],\n        activeIndex: 0,\n        chartData: {\n          datasets: [{}],\n          labels: [\n            \"JAN\",\n            \"FEB\",\n            \"MAR\",\n            \"APR\",\n            \"MAY\",\n            \"JUN\",\n            \"JUL\",\n            \"AUG\",\n            \"SEP\",\n            \"OCT\",\n            \"NOV\",\n            \"DEC\",\n          ],\n        },\n        extraOptions: chartConfigs.purpleChartOptions,\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n        categories: [],\n      },\n      purpleLineChart: {\n        extraOptions: chartConfigs.purpleChartOptions,\n        chartData: {\n          labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n          datasets: [\n            {\n              label: \"Data\",\n              fill: true,\n              borderColor: config.colors.primary,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.primary,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.primary,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [80, 100, 70, 80, 120, 80],\n            },\n          ],\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.2, 0],\n      },\n      greenLineChart: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n          datasets: [\n            {\n              label: \"My First dataset\",\n              fill: true,\n              borderColor: config.colors.danger,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: config.colors.danger,\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: config.colors.danger,\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [90, 27, 60, 12, 80],\n            },\n          ],\n        },\n        gradientColors: [\n          \"rgba(66,134,121,0.15)\",\n          \"rgba(66,134,121,0.0)\",\n          \"rgba(66,134,121,0)\",\n        ],\n        gradientStops: [1, 0.4, 0],\n      },\n      blueBarChart: {\n        extraOptions: chartConfigs.barChartOptions,\n        chartData: {\n          labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n          datasets: [\n            {\n              label: \"Countries\",\n              fill: true,\n              borderColor: config.colors.info,\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              data: [53, 20, 10, 80, 100, 45],\n            },\n          ],\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n      },\n    };\n  },\n  computed: {\n    enableRTL() {\n      return this.$route.query.enableRTL;\n    },\n    isRTL() {\n      return this.$rtl.isRTL;\n    },\n    bigLineChartCategories() {\n      return this.$t(\"dashboard.chartCategories\");\n    },\n  },\n  methods: {\n    initBigChart(index) {\n      let chartData = {\n        datasets: [\n          {\n            fill: true,\n            borderColor: config.colors.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.primary,\n            pointBorderColor: \"rgba(255,255,255,0)\",\n            pointHoverBackgroundColor: config.colors.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: this.bigLineChart.allData[index],\n          },\n        ],\n        labels: [\n          \"JAN\",\n          \"FEB\",\n          \"MAR\",\n          \"APR\",\n          \"MAY\",\n          \"JUN\",\n          \"JUL\",\n          \"AUG\",\n          \"SEP\",\n          \"OCT\",\n          \"NOV\",\n          \"DEC\",\n        ],\n      };\n      this.$refs.bigChart.updateGradients(chartData);\n      this.bigLineChart.chartData = chartData;\n      this.bigLineChart.activeIndex = index;\n    },\n  },\n  mounted() {\n    this.i18n = this.$i18n;\n    if (this.enableRTL) {\n      this.i18n.locale = \"ar\";\n      this.$rtl.enableRTL();\n    }\n    this.initBigChart(0);\n  },\n  beforeDestroy() {\n    if (this.$rtl.isRTL) {\n      this.i18n.locale = \"en\";\n      this.$rtl.disableRTL();\n    }\n  },\n};\n</script>\n<style></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"export default {\n  inheritAttrs: false,\n  name: \"base-input\",\n  props: {\n    label: {\n      type: String,\n      description: \"Input label\"\n    },\n    value: {\n      type: [String, Number],\n      description: \"Input value\"\n    },\n    addonRightIcon: {\n      type: String,\n      description: \"Input icon on the right\"\n    },\n    addonLeftIcon: {\n      type: String,\n      description: \"Input icon on the left\"\n    }\n  },\n  model: {\n    prop: \"value\",\n    event: \"input\"\n  },\n  data() {\n    return {\n      focused: false\n    };\n  },\n  computed: {\n    hasIcon() {\n      const {\n        addonRight,\n        addonLeft\n      } = this.$slots;\n      return addonRight !== undefined || addonLeft !== undefined || this.addonRightIcon !== undefined || this.addonLeftIcon !== undefined;\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.onInput,\n        blur: this.onBlur,\n        focus: this.onFocus\n      };\n    }\n  },\n  methods: {\n    onInput(evt) {\n      this.$emit(\"input\", evt.target.value);\n    },\n    onFocus() {\n      this.focused = true;\n    },\n    onBlur() {\n      this.focused = false;\n    }\n  }\n};","map":{"version":3,"names":["inheritAttrs","name","props","label","type","String","description","value","Number","addonRightIcon","addonLeftIcon","model","prop","event","data","focused","computed","hasIcon","addonRight","addonLeft","$slots","undefined","listeners","$listeners","input","onInput","blur","onBlur","focus","onFocus","methods","evt","$emit","target"],"sources":["src/components/Inputs/BaseInput.vue"],"sourcesContent":["<template>\n  <div\n    class=\"form-group\"\n    :class=\"{\n      'input-group': hasIcon,\n      'input-group-focus': focused,\n    }\"\n  >\n    <slot name=\"label\">\n      <label v-if=\"label\" class=\"control-label\">\n        {{ label }}\n      </label>\n    </slot>\n    <slot name=\"addonLeft\">\n      <span v-if=\"addonLeftIcon\" class=\"input-group-prepend\">\n        <div class=\"input-group-text\">\n          <i :class=\"addonLeftIcon\"></i>\n        </div>\n      </span>\n    </slot>\n    <slot>\n      <input\n        :value=\"value\"\n        v-bind=\"$attrs\"\n        v-on=\"listeners\"\n        class=\"form-control text-white-bold-large\"\n        aria-describedby=\"addon-right addon-left\"\n      />\n    </slot>\n    <slot name=\"addonRight\">\n      <span v-if=\"addonRightIcon\" class=\"input-group-append\">\n        <div class=\"input-group-text\">\n          <i :class=\"addonRightIcon\"></i>\n        </div>\n      </span>\n    </slot>\n    <slot name=\"helperText\"></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  inheritAttrs: false,\n  name: \"base-input\",\n  props: {\n    label: {\n      type: String,\n      description: \"Input label\",\n    },\n    value: {\n      type: [String, Number],\n      description: \"Input value\",\n    },\n    addonRightIcon: {\n      type: String,\n      description: \"Input icon on the right\",\n    },\n    addonLeftIcon: {\n      type: String,\n      description: \"Input icon on the left\",\n    },\n  },\n  model: {\n    prop: \"value\",\n    event: \"input\",\n  },\n  data() {\n    return {\n      focused: false,\n    };\n  },\n  computed: {\n    hasIcon() {\n      const { addonRight, addonLeft } = this.$slots;\n      return (\n        addonRight !== undefined ||\n        addonLeft !== undefined ||\n        this.addonRightIcon !== undefined ||\n        this.addonLeftIcon !== undefined\n      );\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.onInput,\n        blur: this.onBlur,\n        focus: this.onFocus,\n      };\n    },\n  },\n  methods: {\n    onInput(evt) {\n      this.$emit(\"input\", evt.target.value);\n    },\n    onFocus() {\n      this.focused = true;\n    },\n    onBlur() {\n      this.focused = false;\n    },\n  },\n};\n</script>\n\n<style>\n.text-white-bold-large {\n  color: white;\n  font-weight: bold;\n  font-size: 10.2em; /* Increase this value for larger text */\n}\n</style>\n"],"mappings":"AAyCA;EACAA,YAAA;EACAC,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,WAAA;IACA;IACAC,KAAA;MACAH,IAAA,GAAAC,MAAA,EAAAG,MAAA;MACAF,WAAA;IACA;IACAG,cAAA;MACAL,IAAA,EAAAC,MAAA;MACAC,WAAA;IACA;IACAI,aAAA;MACAN,IAAA,EAAAC,MAAA;MACAC,WAAA;IACA;EACA;EACAK,KAAA;IACAC,IAAA;IACAC,KAAA;EACA;EACAC,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,QAAA;MACA;QAAAC,UAAA;QAAAC;MAAA,SAAAC,MAAA;MACA,OACAF,UAAA,KAAAG,SAAA,IACAF,SAAA,KAAAE,SAAA,IACA,KAAAZ,cAAA,KAAAY,SAAA,IACA,KAAAX,aAAA,KAAAW,SAAA;IAEA;IACAC,UAAA;MACA;QACA,QAAAC,UAAA;QACAC,KAAA,OAAAC,OAAA;QACAC,IAAA,OAAAC,MAAA;QACAC,KAAA,OAAAC;MACA;IACA;EACA;EACAC,OAAA;IACAL,QAAAM,GAAA;MACA,KAAAC,KAAA,UAAAD,GAAA,CAAAE,MAAA,CAAA1B,KAAA;IACA;IACAsB,QAAA;MACA,KAAAd,OAAA;IACA;IACAY,OAAA;MACA,KAAAZ,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}